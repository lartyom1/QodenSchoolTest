Описание решений TODO 0-6

TODO 0: Something broken in ConfigureServices.
отсутствовал Singleton IAccountService, для решения проблемы необходимо добавить его в конфигурацию
startup.cs строка 35, с пометкой "was missing TODO 0"

TODO 1: Generate auth cookie for user 'userName' with external id
В конфигурации включена авторизация и аутентификация, добавлена утентификация по куки
Добавлена генерация аутентификационных куки в LoginController.cs

TODO 2: return 404 if user not found
возврат NotFound, если пользователь не был найден. Строка 46 LoginController.cs

для Todo1 и 2 проверка происходит поиском в базе данных по имени пользователя
в исходной версии проекта userName передавался в качестве query параметра, это препятствовало прохождени unit тестов,
тк в тестах userName передается как route parameter
исходный тип Task метода Login не позволял возвращать ошибку 404 и был исправлен на Task<IactionResult>

В случае успешного поиска пользователя по базе и генерации куки принято решение перенаправлять на контроллер аккаунтов /api/account
контроллер вызывает метод LoadOrCreateAsync для этого аккаунта. LoadOrCreateAsync добавляет пользователя в кэш, далее api возвращает информацию о пользователе

TODO 3: Get user id from cookie
для получения имени пользователя используется User.Identity.Name

TODO 4: unauthorized users should receive 401 status code
для отказа доступа неавторизованным пользователям делается проверка на авторизацию
пользователи, не прошедшие авторизацию получают ответ Unauthorized, пользователи, прошедшие проверку, получают доступ к контроллеру

TODO 5: Endpoint should works only for users with "Admin" Role
для этого происходит проверка роли пользователя с помощью User.IsInRole("Admin") прошедшие проверку пользователи получают доступ, не прошедшие получают ответ Forbidden

TODO 6: Fix issue...
Проблема заключается в том, что для увеличения счетчика и получения информации об аккаунте используются методы с разными аргументами
аккаунт может быть получен по Id аргумент тип long, например 1
или по GuId аргумент тип string, например Alice.
При обращении к /counter происходит вызов метода Get, который вызывал в исходной версии проекта метод LoadOrCreateAsync,
принимающий в себя строковое значение и возвращающий пользователя по GuId

Далее счетчик этого пользователя увеличивался. Затем пользователь получал аккаунт по Id long/int значение счетчика для этого пользователя не увеличвалось
Для решения проблемы считаю необходимым получает аккаунт одинаковым способом - по Id или GuId, либо увеличивать счетчик для аккаунта как по GuId, так и по Id
В проекте аккаунты пользователя я получаю по id long/int